<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo + Github Pages个人博客搭建指南</title>
    <link href="/2024/05/25/Hexo+GithubPages%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <url>/2024/05/25/Hexo+GithubPages%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<ul><li><em>Author: KirkSung</em></li><li><em>Date: 2024-05-25</em></li><li><em>Link:</em> </li><li><em>Publisher: kirksung.github.io</em></li><li><em>Notes:</em> </li><li><em>Tags: #Hexo #Blog</em></li></ul><h1 id="Hexo使用指南"><a href="#Hexo使用指南" class="headerlink" title="Hexo使用指南"></a>Hexo使用指南</h1><p>hexo官方文档：<a href="https://hexo.io/zh-cn/docs/">链接</a></p><h2 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h2><p>Hexo的安装可以遵循官方文档中的操作过程，主要包含</p><ol><li>安装前提<ol><li>Git的安装</li><li>Node.js的安装</li></ol></li><li>Hexo的安装<br> 安装成功后，命令行中使用hexo -v检查版本，可能出现一下问题：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">hexo :</span> <span class="hljs-string">无法加载文件</span> <span class="hljs-string">C:\Users\xxxx\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅</span> <span class="hljs-attr">https:</span><br><span class="hljs-string">/go.microsoft.com/fwlink/?LinkID=135170</span> <span class="hljs-string">中的</span> <span class="hljs-string">about_Execution_Policies。</span><br><span class="hljs-string">所在位置</span> <span class="hljs-string">行:1</span> <span class="hljs-string">字符:</span> <span class="hljs-number">1</span><br><span class="hljs-string">+</span> <span class="hljs-string">hexo</span> <span class="hljs-string">-v</span><br><span class="hljs-string">+</span> <span class="hljs-string">~~~~</span><br>    <span class="hljs-string">+</span> <span class="hljs-attr">CategoryInfo          : SecurityError:</span> <span class="hljs-string">(:)</span> []<span class="hljs-string">，PSSecurityException</span><br>    <span class="hljs-string">+</span> <span class="hljs-attr">FullyQualifiedErrorId :</span> <span class="hljs-string">UnauthorizedAccess</span><br></code></pre></td></tr></table></figure><p>解决方法：Windows系统，设置——开发者选项应用</p><p><img src="/2024/05/25/Hexo+GithubPages%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/%E5%BC%80%E5%8F%91%E8%80%85%E9%80%89%E9%A1%B9%E8%AE%BE%E7%BD%AE.png" alt="开发者选项设置"></p><h2 id="Hexo的建站"><a href="#Hexo的建站" class="headerlink" title="Hexo的建站"></a>Hexo的建站</h2><p>执行一下命令，Hexo将在执行文件夹中新建所需要的文件。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> <span class="hljs-symbol">&lt;folder&gt;</span><br>hexo init<br>npm install<br></code></pre></td></tr></table></figure><p>新建完成后，执行文件夹的目录如下。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.  <br>├── _config.yml  <br>├── package.json  <br>├── scaffolds  <br>├── source  <br><span class="hljs-string">|   ├── _drafts  </span><br><span class="hljs-string">|   └── _posts  </span><br>└── themes<br></code></pre></td></tr></table></figure><h2 id="Hexo主题使用指南"><a href="#Hexo主题使用指南" class="headerlink" title="Hexo主题使用指南"></a>Hexo主题使用指南</h2><h3 id="获取主题"><a href="#获取主题" class="headerlink" title="获取主题"></a>获取主题</h3><p>在个人博客中使用了<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>，使用下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">release版本</a><br>解压到themes目录，并将解压出的文件夹重命名为fluid</p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>修改hexo博客目录中的_config.yml：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言</span><br><br><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br></code></pre></td></tr></table></figure><p>将&#x2F;themes&#x2F;fluid&#x2F;_config.yml 配置文件复制到根目录下，并重命名为_config.fluid.yml，后续主题的配置便可在该文件下进行配置。<br>具体配置可参考<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid用户手册</a></p><p>随后构建Hexo并启动Hexo内建服务器，使用浏览器访问localhost:4000即可访问Hexo博客。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><h1 id="部署Hexo到远程平台"><a href="#部署Hexo到远程平台" class="headerlink" title="部署Hexo到远程平台"></a>部署Hexo到远程平台</h1><h2 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h2><p>GitHub创建一个仓库，名称为 Github用户名.github.io，在仓库的Settings中Pages中Branch设置要显示的分支。</p><h2 id="安装hexo-deployer-git"><a href="#安装hexo-deployer-git" class="headerlink" title="安装hexo-deployer-git"></a>安装hexo-deployer-git</h2><p>在hexo目录下，安装</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>修改本地配置文件_config.yml中最后：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span>git@github.com:xxxx/xxxx.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>注意：在本地使用了master分支，github个人仓库中默认使用main分支。</p><p>使用hexo d进行部署。</p><p>附录：</p><ol><li>Hexo文章中插入本地图片</li></ol><p>修改根目录下_config.yml文件中的post_asset_folder的值将false改为true，在使用</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;title&quot;</span><br></code></pre></td></tr></table></figure><p>的时候同时创建一个对应的文件夹用于存储需要导入的图片。</p><p>安装hexo-render-marked插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/CodeFalling/</span>hexo-asset-image --save<br></code></pre></td></tr></table></figure><p>使用markdown标签进行引用<br>! [图片描述] (folder&#x2F;xxx.png)</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/613429644?utm_campaign=shareopn&utm_medium=social&utm_psn=1775230951238590464&utm_source=wechat_session">Hexo+obsidian+github完美建站教程</a> CR：狸豹一家亲</li><li><a href="https://blog.esunr.site/2022/06/64163235c30f.html#1-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8-Hexo">Hexo快速搭建指南</a> CR：EsunR-Blog</li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Obsidian——搭建个人知识管理体系</title>
    <link href="/2024/05/18/Obsidian%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB/"/>
    <url>/2024/05/18/Obsidian%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB/</url>
    
    <content type="html"><![CDATA[<ul><li>*Author: KirkSung</li><li>*Date: 2024-05-19</li><li>*Link: </li><li>*Publisher: <a href="https://kirksung.github.io/">https://kirksung.github.io/</a> </li><li>*Notes: Obsidian——搭建个人知识管理体系</li><li>*Tags:  #Obsidian</li></ul><blockquote><p>通过行为设计匹配的新习惯，是我们在最忙碌、最没动力且状态最不好时，也能做到的行为。</p></blockquote><h1 id="极简三步，构建个人知识管理工作流"><a href="#极简三步，构建个人知识管理工作流" class="headerlink" title="极简三步，构建个人知识管理工作流"></a>极简三步，构建个人知识管理工作流</h1><p>整体来讲，将个人知识管理工作划分为三个步骤：</p><ul><li>Inbox - I：输入，即知识、信息的获取</li><li>Process - P：处理，加工，即对知识、信息进行要点提取、整合、理解、内化、总结等处理</li><li>OutPut - O：输出，即写作、分享并获取反馈。</li></ul><h2 id="Inbox：输入"><a href="#Inbox：输入" class="headerlink" title="Inbox：输入"></a>Inbox：输入</h2><p>不要想着【等有时间了就读】而把很多感觉看起来不错的文章一股脑儿地塞进收藏夹——那等待他们的命运一定是躺在收藏夹里吃灰。</p><h2 id="Process：加工"><a href="#Process：加工" class="headerlink" title="Process：加工"></a>Process：加工</h2><p>「读完」并非结束，而是开始——知识管理的开始。</p><p>知识加工方法，使用个人知识管理专家 Tiago Forte 提出的渐进式总结法（Progressive Summarization）。</p><p>所谓「渐进」，是Tiago Forte把知识加工分为了从 0 到 5 共六个层级，你不一定需要把每一个知识输入都严丝合缝地走完全部层级，但每一层级之间一定是循序渐进的，不能出现跃层。</p><p><img src="/2024/05/18/Obsidian%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB/%E6%B8%90%E8%BF%9B%E5%BC%8F%E6%80%BB%E7%BB%93%E6%B3%95.png" alt="渐进式总结法"></p><ul><li>Layer 0：原始文本<ul><li>信息源文本</li></ul></li><li>Layer 1：捕捉信息<ul><li>所有划线部分，摘出来到一个文档中</li></ul></li><li>Layer 2：重中之重<ul><li>阅读第一层文档，把你仍然觉得眼前一亮、学到、感兴趣、有启发等等地地方加粗标记。</li></ul></li><li>Layer 3：优中之优<ul><li>再读一遍这个文档，以最审视、最挑剔的眼光，高亮你觉得最值得的部分。</li></ul></li><li>Layer 4：总结提取<ul><li>用自己的话对第2、3层做一下总结&#x2F;</li></ul></li><li>Layer 5：重组输出<ul><li>对于一些要点，加入自己的思考、想法、例证、创造等，进行写作输出。结合三步构建个人知识管理工作流中的第三步OutPut。</li></ul></li></ul><p>不一定需要把每一个知识输入都严丝合缝地走完全部层级，但每一个层级之间一定是循序渐进的，不能出现跃层。</p><p>第1、2、3、4层都在同一个文档中进行，可以最大程度的保留上下文语境，不必担心回头看的时候一头雾水。第4、5层不一定每一篇笔记都设计到，只有值得的信息&#x2F;知识才需要如此大费周章，对笔记进行思考。</p><h2 id="OutPut：输出"><a href="#OutPut：输出" class="headerlink" title="OutPut：输出"></a>OutPut：输出</h2><p>搭建完自己的个人知识管理体系后，更需的是进行思考、总结。</p><h1 id="Obsidian的一些个人设置"><a href="#Obsidian的一些个人设置" class="headerlink" title="Obsidian的一些个人设置"></a>Obsidian的一些个人设置</h1><h2 id="Obsidian文件夹设置"><a href="#Obsidian文件夹设置" class="headerlink" title="Obsidian文件夹设置"></a>Obsidian文件夹设置</h2><pre><code class="hljs">在Obsidian的文件夹设置方面，还是参考了PARA进行了设置，根据自己的实际需要和诉求，形成了几个自己的文件夹：- Daily 主要包含Daily、Weekly的计划、追踪及总结，包含年度的Montage- Computer Science and Technology 以自己的专业进行的命名，是长期关注的事情，贯彻于我学习和工作生涯。- Projects 是个人开展的基于兴趣或其他目的短期任务。比如我当前正在进行的通过Obsidian搭建个人知识管理体系、Hexo结合Github建立个人博客主页等，当知识管理工作流在未来的半年内有序顺利工作，个人博客熟练更新后当前的Project便成为完成状态，在很长的时间内不会进行更新。- Inbox 与Areas和Projects相关的内容、笔记或者剪切的文章，处于三步构建个人知识管理工作流中的第一步，作为Resources- Archives 处于生命周期之外的、不再关注的用来归档的项目，以减少对其他重要信息的干扰。- Templates Obsidian中的模板信息</code></pre><h2 id="笔记的分类"><a href="#笔记的分类" class="headerlink" title="笔记的分类"></a>笔记的分类</h2><h3 id="Daily-Note"><a href="#Daily-Note" class="headerlink" title="Daily Note"></a>Daily Note</h3><p>主要包含Daily、Weekly的计划、追踪及总结，包含年度的Montage。根据个人的习惯主要，进行了以下的划分：</p><blockquote><p>[!info] Daily Weekly</p><ul><li>To Do：任务计划</li><li>Tracking：任务追踪</li><li>Summary：总结</li></ul></blockquote><p>在Daily、Weekly的Tracking：任务追踪这个模块中，使用了间歇式日记的方式，在每个工作间歇、以时间戳为单位、采用类似日记的形式做的笔记。清空大脑，记录一下刚完成的事情；下一步行动，更具体的行动。</p><blockquote><p>[!info] Montage</p><ul><li>工作</li><li>学习</li><li>博客</li><li>阅读</li><li>健康</li><li>旅行</li><li>个人习惯</li><li>感情</li></ul></blockquote><p>在年度Montage中主要区分了上下两篇，上篇是对年度的规划，下篇是对年度的总结。根据个人情况主要对正经事和不正经事进行了分类。</p><h3 id="工作-学习笔记"><a href="#工作-学习笔记" class="headerlink" title="工作&#x2F;学习笔记"></a>工作&#x2F;学习笔记</h3><p>根据极简三步，构建个人知识管理工作流中的相关描述，主要包含</p><blockquote><p>[!summary] Summary<br>对应渐进笔记的Layer 4，对原文要点进行总结提炼</p></blockquote><blockquote><p>[!NOTE] Notes<br>对应渐进笔记的Layer1 ~ Layer 3，用来筛选书籍&#x2F;文章中的重要信息和知识点。</p></blockquote><h2 id="内容输出"><a href="#内容输出" class="headerlink" title="内容输出"></a>内容输出</h2><p>随个人习惯。</p><h2 id="使用GitHub进行备份、同步"><a href="#使用GitHub进行备份、同步" class="headerlink" title="使用GitHub进行备份、同步"></a>使用GitHub进行备份、同步</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>网上有许多Obsidian使用GitHub进行备份的教程，在此不进行详细描述，主要包含</p><ol><li><p>创建Obsidian Valut</p></li><li><p>本地Git安装，进行配置，生成密钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.name <span class="hljs-string">&quot;username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email address&quot;</span><br></code></pre></td></tr></table></figure><p>将username 和 email address替换为自己的用户名和邮箱地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssh-keygen -t rsa -C <span class="hljs-string">&quot;email address&quot;</span><br></code></pre></td></tr></table></figure><p>生成密钥，根据shell中的提示，找到id_rsa.pub文件，打开复制全部内容</p></li><li><p>GitHub个人setting中添加SSH and GPG keys：粘贴</p></li><li><p>Github 创建仓库，记得勾选Private，在仓库的Code中，复制SSH地址 <a href="mailto:&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;">&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;</a>:xxx&#x2F;xxxx.git。</p></li><li><p>Obsidian Valut目录下，右键，进行git操作，若不熟悉git的相关操作，可进行搜索</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">git init<br>git add .<br>git commit - m <span class="hljs-string">&quot;init ob valut&quot;</span><br>git remote add origin git@github.com:xxx/xxxx.git<br>git push -u origin main<br></code></pre></td></tr></table></figure></li><li><p>Obsidiant设置-第三方插件，关闭安全模式，插件市场搜索并安装Git插件（需科学上网），若上述Git设置无问题，Git只需要简单设置便可实现Obsidian 仓库自动备份至GitHub对应库。</p></li></ol><p>详细教程可具体搜索，在此仅进行简单描述。</p><h3 id="Android客户端进行同步"><a href="#Android客户端进行同步" class="headerlink" title="Android客户端进行同步"></a>Android客户端进行同步</h3><p>目前仅实现通过Android客户端进行查看，每次查看前通过MGit拉取最新的库到本地。</p><p>安卓手机下载安装MGit App，部分手机无法使用Google Play或通过Google Play下载的MGit无法使用，所以下载F-Droid来安装MGit。主要步骤如下：</p><ol><li>MGit设置中进行Git配置，设置用户名、用户邮箱，点击SSH Keys，右上角点击+添加密钥，复制，进入GitHub个人Setting中添加SSH and GPG keys</li><li>MGit设置，进行repos的根存储位置设置，我使用了&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;我的文档</li><li>右上角+，克隆仓库，输入远程地址，将仓库克隆到本地</li></ol><p>安卓手机，下载Obsidian App，打开克隆到本地的仓库便可以进行查看。Obsidian App修改内容后，通过MGit进行提交。</p><p>目前没有实现通过第三方Git插件实现自动同步的操作。<br>移动端还是希望，只进行查看的操作。</p><h2 id="当前插件介绍"><a href="#当前插件介绍" class="headerlink" title="当前插件介绍"></a>当前插件介绍</h2><blockquote><p>[!example] Calender<br>右侧显示日历，可快速定位Daily、Weekly，如果当日存在未完成的Task To Do，日期下会存在空心圆点。</p></blockquote><blockquote><p>[!example] Git<br>通过Git插件实现Obsidian Valut到Github的自动同步</p></blockquote><blockquote><p>[!example] Editing Toolbar<br>在编辑区域显示Markdown工具栏，方便文档编写</p></blockquote><blockquote><p>[!example] Linter<br>格式化工具</p></blockquote><blockquote><p>[!example] Custom Frames -Archives<br>将Web应用添加到Obsidian中，通过命令行进行快速打开，目前添加了MicroSoft To Do。<br>没有进行深入的使用</p></blockquote><blockquote><p>[!example] Clear Unused Images<br>删除没有使用的图片。删除后的图片路径为跟存储路径下的.Trash<br>注意跟目录下编写.gitignor写入&#x2F;.Trash&#x2F;</p></blockquote><blockquote><p>[!example] Paste image rename<br>配合设置中，文件与链接-附件默认存放路径，设置为当前文件所在文件夹下指定的子文件夹中，设置子文件夹名称为“attachments”<br>设置AutoRename，在文件所在文件夹下的子文件夹中，便能看到Rename的图片</p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>1、<a href="https://sspai.com/post/81926">极简三步、我的个人知识管理工作流</a>  CR： <a href="https://sspai.com/u/chgqadc5/updates">小梨笔记</a><br>2、<a href="https://sspai.com/post/82012">用Obsidian搭建我的个人知识管理工作流</a> CR：<a href="https://sspai.com/u/chgqadc5/updates">小梨笔记</a><br>3、<a href="https://sspai.com/post/78349">我对PARA的理解与时间</a> CR：<a href="https://sspai.com/u/jiangzilong/updates">Jiang</a><br>4、<a href="https://sspai.com/post/63674">玩转Obsidian 03：间歇式日记</a>  CR：<a href="https://sspai.com/u/5b3wva6y/updates">贤者时间_王掌柜</a> </p>]]></content>
    
    
    <categories>
      
      <category>Obsidian</category>
      
    </categories>
    
    
    <tags>
      
      <tag>#Obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
